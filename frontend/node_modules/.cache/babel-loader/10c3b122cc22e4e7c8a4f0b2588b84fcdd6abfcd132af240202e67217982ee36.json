{"ast":null,"code":"var _jsxFileName = \"D:\\\\SMART_INDIA_HACKATHON\\\\timetable-schesuler-prototype\\\\frontend\\\\src\\\\components\\\\TimetableDisplay.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimetableDisplay = ({\n  schedule\n}) => {\n  if (!schedule || schedule.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No schedule generated or the solver could not find a solution.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Group schedule by batch for easier viewing\n  const scheduleByBatch = schedule.reduce((acc, item) => {\n    if (!acc[item.batch]) {\n      acc[item.batch] = [];\n    }\n    acc[item.batch].push(item);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Timetable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), Object.keys(scheduleByBatch).map(batchName => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Timetable for: \", batchName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timeslot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Faculty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scheduleByBatch[batchName].map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.timeslot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.faculty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, batchName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = TimetableDisplay;\nexport default TimetableDisplay;\nvar _c;\n$RefreshReg$(_c, \"TimetableDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TimetableDisplay","schedule","length","children","fileName","_jsxFileName","lineNumber","columnNumber","scheduleByBatch","reduce","acc","item","batch","push","Object","keys","map","batchName","style","marginBottom","border","width","borderCollapse","index","timeslot","subject","faculty","room","_c","$RefreshReg$"],"sources":["D:/SMART_INDIA_HACKATHON/timetable-schesuler-prototype/frontend/src/components/TimetableDisplay.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst TimetableDisplay = ({ schedule }) => {\r\n    if (!schedule || schedule.length === 0) {\r\n        return <p>No schedule generated or the solver could not find a solution.</p>;\r\n    }\r\n\r\n    // Group schedule by batch for easier viewing\r\n    const scheduleByBatch = schedule.reduce((acc, item) => {\r\n        if (!acc[item.batch]) {\r\n            acc[item.batch] = [];\r\n        }\r\n        acc[item.batch].push(item);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <div>\r\n            <h2>Generated Timetable</h2>\r\n            {Object.keys(scheduleByBatch).map(batchName => (\r\n                <div key={batchName} style={{ marginBottom: '30px' }}>\r\n                    <h3>Timetable for: {batchName}</h3>\r\n                    <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Timeslot</th>\r\n                                <th>Subject</th>\r\n                                <th>Faculty</th>\r\n                                <th>Room</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {scheduleByBatch[batchName].map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{item.timeslot}</td>\r\n                                    <td>{item.subject}</td>\r\n                                    <td>{item.faculty}</td>\r\n                                    <td>{item.room}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimetableDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}