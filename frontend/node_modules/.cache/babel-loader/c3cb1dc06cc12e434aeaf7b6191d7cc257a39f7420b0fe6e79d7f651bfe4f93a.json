{"ast":null,"code":"// import React, {useState} from 'react';\n// import axios from 'axios';\n\n// const AddFacultyForm = ({onFacultyAdded}) => {\n//     const [name, setName] = useState('');\n//     const [department, setDepartment] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [phone, setPhone] = useState('');\n//     const [qualifications, setQualifications] = useState('');\n//     const [unavailability, setUnavailability] = useState('');\n//     const [maxHoursPerWeek, setMaxHoursPerWeek] = useState(10);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if(!name || !department || !email) {\n//             alert(\"Name, Department and Email are required.\");\n//             return;\n//         }\n\n//         try {\n//             const newFaculty = {\n//                 name,\n//                 department,\n//                 email,\n//                 phone,\n//                 qualifications: qualifications.split(',').map(q => q.trim()),\n//                 unavailability: unavailability.split(',').map(u => u.trim()),\n//                 maxHoursPerWeek\n//             };\n//             await axios.post('http://localhost:5000/api/faculties', newFaculty);\n//             onFacultyAdded();\n//             setName('');\n//             setDepartment('');\n//             setEmail('');\n//             setPhone('');\n//             setQualifications('');\n//             setUnavailability('');\n//             setMaxHoursPerWeek(10);\n//         } catch (error) {\n//             console.error(\"Error adding faculty:\", error);\n//             alert(\"Failed to add faculty. Please try again.\");\n//         }\n//     };\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <h3>Add New Faculty</h3>\n//             <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Department\" value={department} onChange={(e) => setDepartment(e.target.value)} />\n//             <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Qualifications (comma separated)\" value={qualifications} onChange={(e) => setQualifications(e.target.value)} />\n//             <input type=\"text\" placeholder=\"Unavailability (comma separated)\" value={unavailability} onChange={(e) => setUnavailability(e.target.value)} />\n//             <input type=\"number\" placeholder=\"Max Hours/Week\" value={maxHoursPerWeek} onChange={(e) => setMaxHoursPerWeek(e.target.value)} />\n//             <button type=\"submit\">Add Faculty</button>\n//         </form>\n//     );      \n// };\n\n// export default AddFacultyForm;","map":{"version":3,"names":[],"sources":["D:/SMART_INDIA_HACKATHON/timetable-schesuler-prototype/frontend/src/components/AddFacultyForm.js"],"sourcesContent":["// import React, {useState} from 'react';\r\n// import axios from 'axios';\r\n\r\n// const AddFacultyForm = ({onFacultyAdded}) => {\r\n//     const [name, setName] = useState('');\r\n//     const [department, setDepartment] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [phone, setPhone] = useState('');\r\n//     const [qualifications, setQualifications] = useState('');\r\n//     const [unavailability, setUnavailability] = useState('');\r\n//     const [maxHoursPerWeek, setMaxHoursPerWeek] = useState(10);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         if(!name || !department || !email) {\r\n//             alert(\"Name, Department and Email are required.\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const newFaculty = {\r\n//                 name,\r\n//                 department,\r\n//                 email,\r\n//                 phone,\r\n//                 qualifications: qualifications.split(',').map(q => q.trim()),\r\n//                 unavailability: unavailability.split(',').map(u => u.trim()),\r\n//                 maxHoursPerWeek\r\n//             };\r\n//             await axios.post('http://localhost:5000/api/faculties', newFaculty);\r\n//             onFacultyAdded();\r\n//             setName('');\r\n//             setDepartment('');\r\n//             setEmail('');\r\n//             setPhone('');\r\n//             setQualifications('');\r\n//             setUnavailability('');\r\n//             setMaxHoursPerWeek(10);\r\n//         } catch (error) {\r\n//             console.error(\"Error adding faculty:\", error);\r\n//             alert(\"Failed to add faculty. Please try again.\");\r\n//         }\r\n//     };\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <h3>Add New Faculty</h3>\r\n//             <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n//             <input type=\"text\" placeholder=\"Department\" value={department} onChange={(e) => setDepartment(e.target.value)} />\r\n//             <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n//             <input type=\"text\" placeholder=\"Phone\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n//             <input type=\"text\" placeholder=\"Qualifications (comma separated)\" value={qualifications} onChange={(e) => setQualifications(e.target.value)} />\r\n//             <input type=\"text\" placeholder=\"Unavailability (comma separated)\" value={unavailability} onChange={(e) => setUnavailability(e.target.value)} />\r\n//             <input type=\"number\" placeholder=\"Max Hours/Week\" value={maxHoursPerWeek} onChange={(e) => setMaxHoursPerWeek(e.target.value)} />\r\n//             <button type=\"submit\">Add Faculty</button>\r\n//         </form>\r\n//     );      \r\n// };\r\n\r\n// export default AddFacultyForm;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}